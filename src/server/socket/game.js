// Generated by CoffeeScript 1.9.1
(function() {
  var Game;

  Game = (function() {
    Game.sio;

    Game.code;

    Game.socket;

    Game.players = [];

    function Game(sio, code) {
      var namespace;
      this.sio = sio;
      this.code = code;
      namespace = '/' + this.code;
      this.sio.of(namespace).on('connection', (function(_this) {
        return function(socket) {
          socket.on('initialize', function(data) {
            return _this.initialize(socket);
          });
          return socket.on('signin', function(data, fn) {
            _this.addPlayer(data.name, socket);
            return fn();
          });
        };
      })(this));
    }

    Game.prototype.initialize = function(game) {
      this.game = game;
      return this.game.on('disconnect', (function(_this) {
        return function() {
          return _this.game.broadcast.emit('end-game');
        };
      })(this));
    };

    Game.prototype.setMaster = function(master) {
      this.master = master;
      this.master.on('start-game', (function(_this) {
        return function(data) {
          return _this.maste.broadcast.emit('start-game');
        };
      })(this));
      this.master.on('pause-game', (function(_this) {
        return function(data) {
          return _this.master.broadcast.emit('pause-game');
        };
      })(this));
      this.master.on('end-game', (function(_this) {
        return function(data) {
          return _this.master.broadcast.emit('end-game');
        };
      })(this));
      this.master.on('disconnect', (function(_this) {
        return function() {
          return _this.master.broadcast.emit('end-game');
        };
      })(this));
      return this.master.send('master');
    };

    Game.prototype.addPlayer = function(name, player) {
      player.on('move', (function(_this) {
        return function(data) {
          return _this.game.emit('move', data);
        };
      })(this));
      player.on('disconnect', (function(_this) {
        return function() {
          return _this.game.emit('player-leave', {
            "name": name
          });
        };
      })(this));
      return this.game.emit('player-join', {
        "name": name
      });
    };

    Game.prototype.getCode = function() {
      return this.code;
    };

    return Game;

  })();

  module.exports = Game;

}).call(this);
